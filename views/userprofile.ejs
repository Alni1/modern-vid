<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="/stylesheets/style.css" rel="stylesheet" />
  <title><%= title %></title>
</head>
<body style="margin:0;">
  <%- include('partials/header', { user: typeof user !== 'undefined' ? user : null, query: typeof query !== 'undefined' ? query : '' }) %>

  <div class="profile-container" style="margin-top: 95px;"> <%# Added margin-top to account for fixed header %>
    <div class="profile-header">
      <div class="profile-avatar-container">
        <% if (user.avatarUrl) { %>
          <img src="<%= user.avatarUrl %>" alt="Avatar" class="profile-avatar" />
        <% } else { %>
          <div class="profile-avatar-placeholder"></div>
        <% } %>
      </div>
      <div class="profile-info">
        <h1 class="profile-username"><%= user.username %></h1>
       
      </div>
    </div>

    <div class="profile-actions">
      <div class="avatar-update-section">
        <h4 class="form-label">Update Avatar:</h4>
        <img id="avatarPreview" src="<%= user.avatarUrl || '/images/default-avatar.png' %>" alt="Avatar Preview" class="avatar-preview-img"/>
        <form action="/userprofile/avatar" method="POST" enctype="multipart/form-data" class="avatar-upload-form">
          <label for="avatar" class="btn btn-primary btn-file-upload">
            Choose Image
            <input type="file" id="avatar" name="avatar" accept="image/*" required style="display: none;"/>
          </label>
          <button type="submit" class="btn btn-success" id="uploadAvatarBtn" style="display:none;">Upload New Avatar</button>
        </form>
      </div>
      <button id="openUploadBtn" class="btn btn-secondary">Upload New Video</button>
    </div>

    <div class="profile-videos-section">
      <h2>Your Videos</h2>
      <% if (!user.videos || user.videos.length === 0) { %>
        <p class="no-videos-message">You have no videos uploaded yet.</p>
      <% } else { %>
        <div class="video-grid profile-video-grid">
          <% user.videos.forEach(video => { %>
            <div class="video-card">
              <a href="/player/<%= video._id %>" class="video-card-link">
                <div class="video-thumbnail-container">
                  <% if (video.thumbnailUrl) { %>
                    <img src="<%= video.thumbnailUrl %>" alt="<%= video.title %> thumbnail" class="video-thumbnail" />
                  <% } else { %>
                    <video class="video-thumbnail" muted preload="metadata">
                      <source src="/uploads/videos/<%= video.videoId %>#t=0.5" type="<%= video.contentType %>">
                      Your browser does not support the video tag.
                    </video>
                  <% } %>
                </div>
                <div class="video-info">
                  <h3 class="video-title"><%= video.title %></h3>
                  <div class="video-meta">
                    <span class="video-views"><%= video.views %> views</span>
                    <span class="video-date"><%= new Date(video.uploadedAt).toLocaleDateString() %></span>
                  </div>
                </div>
              </a>
              <div class="video-actions">
                <form method="POST" action="/userprofile/video/delete/<%= video._id %>" onsubmit="return confirm('Are you sure you want to delete this video?');">
                  <button type="submit" class="btn btn-danger btn-small">Delete Video</button>
                </form>
              </div>
            </div>
          <% }); %>
        </div>
      <% } %>
    </div>

    <div class="profile-danger-zone">
      <h3>Account Settings</h3>
      <form method="POST" action="/userprofile/deleteUser" onsubmit="return confirm('Are you sure you want to delete your account? This action is irreversible and will remove all your data.');">
        <button type="submit" class="btn btn-danger">Delete My Account</button>
      </form>
    </div>
  </div>

 
  <div id="uploadModal" style="display:none; position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; 
    background: rgba(0,0,0,0.5); justify-content: center; align-items: center; z-index: 1000;">
    <div style="background: white; padding: 2em; border-radius: 15px; width: 400px; max-width: 90%; position: relative;">
      <h2 style="margin-top: 0;">Upload Video</h2>
      <form id="videoUploadForm" action="/upload" method="POST" enctype="multipart/form-data">
        <div style="margin-bottom: 15px;">
          <label for="modalTitle" style="display: block; margin-bottom: 5px; font-weight: bold;">Title</label>
          <input type="text" id="modalTitle" name="title" placeholder="Video title" required style="width: 100%; padding: 8px; box-sizing: border-box;" />
        </div>
        
        <div style="margin-bottom: 15px;">
          <label for="modalDescription" style="display: block; margin-bottom: 5px; font-weight: bold;">Description</label>
          <input type="text" id="modalDescription" name="description" placeholder="Description (optional)" style="width: 100%; padding: 8px; box-sizing: border-box;" />
        </div>
        
        <div style="margin-bottom: 15px;">
          <label for="modalVideoFile" style="display: block; margin-bottom: 5px; font-weight: bold;">Select video file</label>
          <input type="file" id="modalVideoFile" name="video" accept="video/*" required style="width: 100%;" />
        </div>

        <div style="margin-bottom: 15px;">
          <label for="modalCategory" style="display: block; margin-bottom: 5px; font-weight: bold;">Category</label>
          <select id="modalCategory" name="category" required style="width: 100%; padding: 8px; box-sizing: border-box;">
            <option value="Education">Education</option>
            <option value="Entertainment">Entertainment</option>
          </select>
        </div>

        <div id="uploadProgressContainer" style="margin-bottom: 15px; display: none;">
          <div id="uploadProgressBar" style="width: 0%; height: 20px; background-color: #4CAF50; text-align: center; line-height: 20px; color: white; border-radius: 5px;">0%</div>
        </div>
        <div id="uploadStatus" style="margin-bottom: 15px; font-size: 0.9em;"></div>


        <div style="display: flex; justify-content: flex-end; gap: 10px;">
          <button type="button" id="closeUploadBtn" style="padding: 10px 20px; border-radius: 4px; cursor: pointer; background: #eee; border: none;">Cancel</button>
          <button type="submit" id="submitUploadBtn" class="registerbtn" style="width: auto;">Upload</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    const openBtn = document.getElementById('openUploadBtn');
    const modal = document.getElementById('uploadModal');
    const closeBtn = document.getElementById('closeUploadBtn');
    const uploadForm = document.getElementById('videoUploadForm');
    const submitUploadBtn = document.getElementById('submitUploadBtn');
    const progressBar = document.getElementById('uploadProgressBar');
    const progressContainer = document.getElementById('uploadProgressContainer');
    const uploadStatus = document.getElementById('uploadStatus');
    const videoFileInput = document.getElementById('modalVideoFile');

    openBtn.addEventListener('click', () => {
      modal.style.display = 'flex';
      // Reset form and progress on open
      uploadForm.reset();
      progressContainer.style.display = 'none';
      progressBar.style.width = '0%';
      progressBar.textContent = '0%';
      uploadStatus.textContent = '';
      submitUploadBtn.disabled = false;
    });

    closeBtn.addEventListener('click', () => {
      modal.style.display = 'none';
    });

    window.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.style.display = 'none';
      }
    });

    uploadForm.addEventListener('submit', function(event) {
      event.preventDefault();
      submitUploadBtn.disabled = true;
      uploadStatus.textContent = 'Starting upload...';

      const formData = new FormData(this);
      const xhr = new XMLHttpRequest();

      xhr.open('POST', '/upload', true);

      xhr.upload.onprogress = function(e) {
        if (e.lengthComputable) {
          const percentComplete = (e.loaded / e.total) * 100;
          progressContainer.style.display = 'block';
          progressBar.style.width = percentComplete.toFixed(2) + '%';
          progressBar.textContent = percentComplete.toFixed(2) + '%';
          uploadStatus.textContent = 'Uploading to server... ' + percentComplete.toFixed(2) + '%';
        }
      };

      xhr.onload = function() {
        submitUploadBtn.disabled = false;
        if (xhr.status === 201) {
          uploadStatus.textContent = 'Upload successful! Processing on server...';
          // Optionally, close modal and refresh part of the page or redirect
          // For now, just give a success message.
          // You might want to redirect to userprofile or refresh videos list
          setTimeout(() => {
            modal.style.display = 'none';
            window.location.reload(); // Simple reload for now
          }, 2000);
        } else {
          progressContainer.style.display = 'none';
          try {
            const response = JSON.parse(xhr.responseText);
            uploadStatus.textContent = 'Upload failed: ' + (response.error || xhr.statusText);
          } catch (parseError) {
            uploadStatus.textContent = 'Upload failed: ' + xhr.statusText;
          }
        }
      };

      xhr.onerror = function() {
        submitUploadBtn.disabled = false;
        progressContainer.style.display = 'none';
        uploadStatus.textContent = 'Upload failed. Network error.';
      };
      
      xhr.send(formData);
    });

    // Avatar Preview Script
    const avatarInput = document.getElementById('avatar');
    const avatarPreview = document.getElementById('avatarPreview');
    const uploadAvatarBtn = document.getElementById('uploadAvatarBtn');
    const defaultAvatarSrc = '<%= user.avatarUrl || "/images/default-avatar.png" %>'; // Store initial/default src

    if (avatarInput && avatarPreview && uploadAvatarBtn) {
      avatarInput.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = function(e) {
            avatarPreview.src = e.target.result;
          }
          reader.readAsDataURL(file);
          uploadAvatarBtn.style.display = 'inline-block'; // Show upload button
        } else {
          // If no file is selected (e.g., user cancels dialog), revert to original or default
          avatarPreview.src = defaultAvatarSrc;
          uploadAvatarBtn.style.display = 'none';
        }
      });
    }
  </script>
</body>
</html>